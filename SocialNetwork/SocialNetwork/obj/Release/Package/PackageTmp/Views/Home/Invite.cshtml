@model SocialNetwork.Models.Convidar

@{
    ViewBag.Title = "Convidar amigo para grupo";
}

<h2>Convidar amigo para grupo</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @*<h4>Convidar</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
            @Html.LabelFor(model => model.idGrupo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.idGrupo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.idGrupo, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.idGrupo, "Grupo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Partido, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => Model.idGrupo, (SelectList)ViewBag.idGrupo, "--- Escolhe uma opção ---", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idGrupo, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.idUtilizadorConvidado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.idUtilizadorConvidado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.idUtilizadorConvidado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idUtilizadorConvida, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.idUtilizadorConvida, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.idUtilizadorConvida, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idEstado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.idEstado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.idEstado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.data, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.data, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.data, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.estado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Convidar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
