#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SocialNetwork.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SocialNetworkDB")]
	public partial class SocialNetworkDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertClassificar(Classificar instance);
    partial void UpdateClassificar(Classificar instance);
    partial void DeleteClassificar(Classificar instance);
    partial void InsertComentar(Comentar instance);
    partial void UpdateComentar(Comentar instance);
    partial void DeleteComentar(Comentar instance);
    partial void InsertConvidar(Convidar instance);
    partial void UpdateConvidar(Convidar instance);
    partial void DeleteConvidar(Convidar instance);
    partial void InsertDenuncia_Grupo(Denuncia_Grupo instance);
    partial void UpdateDenuncia_Grupo(Denuncia_Grupo instance);
    partial void DeleteDenuncia_Grupo(Denuncia_Grupo instance);
    partial void InsertDenuncia_Post(Denuncia_Post instance);
    partial void UpdateDenuncia_Post(Denuncia_Post instance);
    partial void DeleteDenuncia_Post(Denuncia_Post instance);
    partial void InsertDenuncia_Utilizador(Denuncia_Utilizador instance);
    partial void UpdateDenuncia_Utilizador(Denuncia_Utilizador instance);
    partial void DeleteDenuncia_Utilizador(Denuncia_Utilizador instance);
    partial void InsertDescarregar(Descarregar instance);
    partial void UpdateDescarregar(Descarregar instance);
    partial void DeleteDescarregar(Descarregar instance);
    partial void InsertGrupo(Grupo instance);
    partial void UpdateGrupo(Grupo instance);
    partial void DeleteGrupo(Grupo instance);
    partial void InsertPerfil_Grupo(Perfil_Grupo instance);
    partial void UpdatePerfil_Grupo(Perfil_Grupo instance);
    partial void DeletePerfil_Grupo(Perfil_Grupo instance);
    partial void InsertPost(Post instance);
    partial void UpdatePost(Post instance);
    partial void DeletePost(Post instance);
    partial void InsertUtilizador(Utilizador instance);
    partial void UpdateUtilizador(Utilizador instance);
    partial void DeleteUtilizador(Utilizador instance);
    #endregion
		
		public SocialNetworkDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SocialNetworkDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SocialNetworkDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SocialNetworkDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SocialNetworkDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SocialNetworkDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Classificar> Classificars
		{
			get
			{
				return this.GetTable<Classificar>();
			}
		}
		
		public System.Data.Linq.Table<Comentar> Comentars
		{
			get
			{
				return this.GetTable<Comentar>();
			}
		}
		
		public System.Data.Linq.Table<Convidar> Convidars
		{
			get
			{
				return this.GetTable<Convidar>();
			}
		}
		
		public System.Data.Linq.Table<Denuncia_Grupo> Denuncia_Grupos
		{
			get
			{
				return this.GetTable<Denuncia_Grupo>();
			}
		}
		
		public System.Data.Linq.Table<Denuncia_Post> Denuncia_Posts
		{
			get
			{
				return this.GetTable<Denuncia_Post>();
			}
		}
		
		public System.Data.Linq.Table<Denuncia_Utilizador> Denuncia_Utilizadors
		{
			get
			{
				return this.GetTable<Denuncia_Utilizador>();
			}
		}
		
		public System.Data.Linq.Table<Descarregar> Descarregars
		{
			get
			{
				return this.GetTable<Descarregar>();
			}
		}
		
		public System.Data.Linq.Table<Grupo> Grupos
		{
			get
			{
				return this.GetTable<Grupo>();
			}
		}
		
		public System.Data.Linq.Table<Perfil_Grupo> Perfil_Grupos
		{
			get
			{
				return this.GetTable<Perfil_Grupo>();
			}
		}
		
		public System.Data.Linq.Table<Post> Posts
		{
			get
			{
				return this.GetTable<Post>();
			}
		}
		
		public System.Data.Linq.Table<Utilizador> Utilizadors
		{
			get
			{
				return this.GetTable<Utilizador>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Classificar")]
	public partial class Classificar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idClassificar;
		
		private int _idUtilizador;
		
		private int _idPost;
		
		private System.DateTime _data;
		
		private bool _classificacao;
		
		private EntityRef<Post> _Post;
		
		private EntityRef<Utilizador> _Utilizador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidClassificarChanging(int value);
    partial void OnidClassificarChanged();
    partial void OnidUtilizadorChanging(int value);
    partial void OnidUtilizadorChanged();
    partial void OnidPostChanging(int value);
    partial void OnidPostChanged();
    partial void OndataChanging(System.DateTime value);
    partial void OndataChanged();
    partial void OnclassificacaoChanging(bool value);
    partial void OnclassificacaoChanged();
    #endregion
		
		public Classificar()
		{
			this._Post = default(EntityRef<Post>);
			this._Utilizador = default(EntityRef<Utilizador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idClassificar", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idClassificar
		{
			get
			{
				return this._idClassificar;
			}
			set
			{
				if ((this._idClassificar != value))
				{
					this.OnidClassificarChanging(value);
					this.SendPropertyChanging();
					this._idClassificar = value;
					this.SendPropertyChanged("idClassificar");
					this.OnidClassificarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUtilizador", DbType="Int NOT NULL")]
		public int idUtilizador
		{
			get
			{
				return this._idUtilizador;
			}
			set
			{
				if ((this._idUtilizador != value))
				{
					if (this._Utilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUtilizadorChanging(value);
					this.SendPropertyChanging();
					this._idUtilizador = value;
					this.SendPropertyChanged("idUtilizador");
					this.OnidUtilizadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPost", DbType="Int NOT NULL")]
		public int idPost
		{
			get
			{
				return this._idPost;
			}
			set
			{
				if ((this._idPost != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPostChanging(value);
					this.SendPropertyChanging();
					this._idPost = value;
					this.SendPropertyChanged("idPost");
					this.OnidPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="DateTime NOT NULL")]
		public System.DateTime data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_classificacao", DbType="Bit NOT NULL")]
		public bool classificacao
		{
			get
			{
				return this._classificacao;
			}
			set
			{
				if ((this._classificacao != value))
				{
					this.OnclassificacaoChanging(value);
					this.SendPropertyChanging();
					this._classificacao = value;
					this.SendPropertyChanged("classificacao");
					this.OnclassificacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_Classificar", Storage="_Post", ThisKey="idPost", OtherKey="idPost", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.Classificars.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.Classificars.Add(this);
						this._idPost = value.idPost;
					}
					else
					{
						this._idPost = default(int);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Classificar", Storage="_Utilizador", ThisKey="idUtilizador", OtherKey="idUtilizador", IsForeignKey=true)]
		public Utilizador Utilizador
		{
			get
			{
				return this._Utilizador.Entity;
			}
			set
			{
				Utilizador previousValue = this._Utilizador.Entity;
				if (((previousValue != value) 
							|| (this._Utilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizador.Entity = null;
						previousValue.Classificars.Remove(this);
					}
					this._Utilizador.Entity = value;
					if ((value != null))
					{
						value.Classificars.Add(this);
						this._idUtilizador = value.idUtilizador;
					}
					else
					{
						this._idUtilizador = default(int);
					}
					this.SendPropertyChanged("Utilizador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comentar")]
	public partial class Comentar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idComentar;
		
		private int _idPost;
		
		private int _idComentador;
		
		private string _texto;
		
		private System.DateTime _data;
		
		private bool _visibilidade;
		
		private EntityRef<Utilizador> _Utilizador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidComentarChanging(int value);
    partial void OnidComentarChanged();
    partial void OnidPostChanging(int value);
    partial void OnidPostChanged();
    partial void OnidComentadorChanging(int value);
    partial void OnidComentadorChanged();
    partial void OntextoChanging(string value);
    partial void OntextoChanged();
    partial void OndataChanging(System.DateTime value);
    partial void OndataChanged();
    partial void OnvisibilidadeChanging(bool value);
    partial void OnvisibilidadeChanged();
    #endregion
		
		public Comentar()
		{
			this._Utilizador = default(EntityRef<Utilizador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idComentar", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int idComentar
		{
			get
			{
				return this._idComentar;
			}
			set
			{
				if ((this._idComentar != value))
				{
					this.OnidComentarChanging(value);
					this.SendPropertyChanging();
					this._idComentar = value;
					this.SendPropertyChanged("idComentar");
					this.OnidComentarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPost", DbType="Int NOT NULL")]
		public int idPost
		{
			get
			{
				return this._idPost;
			}
			set
			{
				if ((this._idPost != value))
				{
					this.OnidPostChanging(value);
					this.SendPropertyChanging();
					this._idPost = value;
					this.SendPropertyChanged("idPost");
					this.OnidPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idComentador", DbType="Int NOT NULL")]
		public int idComentador
		{
			get
			{
				return this._idComentador;
			}
			set
			{
				if ((this._idComentador != value))
				{
					if (this._Utilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidComentadorChanging(value);
					this.SendPropertyChanging();
					this._idComentador = value;
					this.SendPropertyChanged("idComentador");
					this.OnidComentadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_texto", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string texto
		{
			get
			{
				return this._texto;
			}
			set
			{
				if ((this._texto != value))
				{
					this.OntextoChanging(value);
					this.SendPropertyChanging();
					this._texto = value;
					this.SendPropertyChanged("texto");
					this.OntextoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_visibilidade", DbType="Bit NOT NULL")]
		public bool visibilidade
		{
			get
			{
				return this._visibilidade;
			}
			set
			{
				if ((this._visibilidade != value))
				{
					this.OnvisibilidadeChanging(value);
					this.SendPropertyChanging();
					this._visibilidade = value;
					this.SendPropertyChanged("visibilidade");
					this.OnvisibilidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Comentar", Storage="_Utilizador", ThisKey="idComentador", OtherKey="idUtilizador", IsForeignKey=true)]
		public Utilizador Utilizador
		{
			get
			{
				return this._Utilizador.Entity;
			}
			set
			{
				Utilizador previousValue = this._Utilizador.Entity;
				if (((previousValue != value) 
							|| (this._Utilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizador.Entity = null;
						previousValue.Comentars.Remove(this);
					}
					this._Utilizador.Entity = value;
					if ((value != null))
					{
						value.Comentars.Add(this);
						this._idComentador = value.idUtilizador;
					}
					else
					{
						this._idComentador = default(int);
					}
					this.SendPropertyChanged("Utilizador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Convidar")]
	public partial class Convidar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idConvite;
		
		private int _idGrupo;
		
		private int _idUtilizadorConvidado;
		
		private int _idUtilizadorConvida;
		
		private System.DateTime _data;
		
		private string _estado;
		
		private EntityRef<Grupo> _Grupo;
		
		private EntityRef<Utilizador> _Utilizador;
		
		private EntityRef<Utilizador> _Utilizador1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidConviteChanging(int value);
    partial void OnidConviteChanged();
    partial void OnidGrupoChanging(int value);
    partial void OnidGrupoChanged();
    partial void OnidUtilizadorConvidadoChanging(int value);
    partial void OnidUtilizadorConvidadoChanged();
    partial void OnidUtilizadorConvidaChanging(int value);
    partial void OnidUtilizadorConvidaChanged();
    partial void OndataChanging(System.DateTime value);
    partial void OndataChanged();
    partial void OnestadoChanging(string value);
    partial void OnestadoChanged();
    #endregion
		
		public Convidar()
		{
			this._Grupo = default(EntityRef<Grupo>);
			this._Utilizador = default(EntityRef<Utilizador>);
			this._Utilizador1 = default(EntityRef<Utilizador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idConvite", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idConvite
		{
			get
			{
				return this._idConvite;
			}
			set
			{
				if ((this._idConvite != value))
				{
					this.OnidConviteChanging(value);
					this.SendPropertyChanging();
					this._idConvite = value;
					this.SendPropertyChanged("idConvite");
					this.OnidConviteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGrupo", DbType="Int NOT NULL")]
		public int idGrupo
		{
			get
			{
				return this._idGrupo;
			}
			set
			{
				if ((this._idGrupo != value))
				{
					if (this._Grupo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidGrupoChanging(value);
					this.SendPropertyChanging();
					this._idGrupo = value;
					this.SendPropertyChanged("idGrupo");
					this.OnidGrupoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUtilizadorConvidado", DbType="Int NOT NULL")]
		public int idUtilizadorConvidado
		{
			get
			{
				return this._idUtilizadorConvidado;
			}
			set
			{
				if ((this._idUtilizadorConvidado != value))
				{
					if (this._Utilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUtilizadorConvidadoChanging(value);
					this.SendPropertyChanging();
					this._idUtilizadorConvidado = value;
					this.SendPropertyChanged("idUtilizadorConvidado");
					this.OnidUtilizadorConvidadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUtilizadorConvida", DbType="Int NOT NULL")]
		public int idUtilizadorConvida
		{
			get
			{
				return this._idUtilizadorConvida;
			}
			set
			{
				if ((this._idUtilizadorConvida != value))
				{
					if (this._Utilizador1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUtilizadorConvidaChanging(value);
					this.SendPropertyChanging();
					this._idUtilizadorConvida = value;
					this.SendPropertyChanged("idUtilizadorConvida");
					this.OnidUtilizadorConvidaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="DateTime NOT NULL")]
		public System.DateTime data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grupo_Convidar", Storage="_Grupo", ThisKey="idGrupo", OtherKey="idGrupo", IsForeignKey=true)]
		public Grupo Grupo
		{
			get
			{
				return this._Grupo.Entity;
			}
			set
			{
				Grupo previousValue = this._Grupo.Entity;
				if (((previousValue != value) 
							|| (this._Grupo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grupo.Entity = null;
						previousValue.Convidars.Remove(this);
					}
					this._Grupo.Entity = value;
					if ((value != null))
					{
						value.Convidars.Add(this);
						this._idGrupo = value.idGrupo;
					}
					else
					{
						this._idGrupo = default(int);
					}
					this.SendPropertyChanged("Grupo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Convidar", Storage="_Utilizador", ThisKey="idUtilizadorConvidado", OtherKey="idUtilizador", IsForeignKey=true)]
		public Utilizador Utilizador
		{
			get
			{
				return this._Utilizador.Entity;
			}
			set
			{
				Utilizador previousValue = this._Utilizador.Entity;
				if (((previousValue != value) 
							|| (this._Utilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizador.Entity = null;
						previousValue.Convidars.Remove(this);
					}
					this._Utilizador.Entity = value;
					if ((value != null))
					{
						value.Convidars.Add(this);
						this._idUtilizadorConvidado = value.idUtilizador;
					}
					else
					{
						this._idUtilizadorConvidado = default(int);
					}
					this.SendPropertyChanged("Utilizador");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Convidar1", Storage="_Utilizador1", ThisKey="idUtilizadorConvida", OtherKey="idUtilizador", IsForeignKey=true)]
		public Utilizador Utilizador1
		{
			get
			{
				return this._Utilizador1.Entity;
			}
			set
			{
				Utilizador previousValue = this._Utilizador1.Entity;
				if (((previousValue != value) 
							|| (this._Utilizador1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizador1.Entity = null;
						previousValue.Convidars1.Remove(this);
					}
					this._Utilizador1.Entity = value;
					if ((value != null))
					{
						value.Convidars1.Add(this);
						this._idUtilizadorConvida = value.idUtilizador;
					}
					else
					{
						this._idUtilizadorConvida = default(int);
					}
					this.SendPropertyChanged("Utilizador1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Denuncia_Grupo")]
	public partial class Denuncia_Grupo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _data;
		
		private int _idGrupoDenunciado;
		
		private int _idUtilizadorQueixoso;
		
		private string _motivo;
		
		private string _estado;
		
		private int _idDenuncia;
		
		private EntityRef<Grupo> _Grupo;
		
		private EntityRef<Utilizador> _Utilizador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndataChanging(System.DateTime value);
    partial void OndataChanged();
    partial void OnidGrupoDenunciadoChanging(int value);
    partial void OnidGrupoDenunciadoChanged();
    partial void OnidUtilizadorQueixosoChanging(int value);
    partial void OnidUtilizadorQueixosoChanged();
    partial void OnmotivoChanging(string value);
    partial void OnmotivoChanged();
    partial void OnestadoChanging(string value);
    partial void OnestadoChanged();
    partial void OnidDenunciaChanging(int value);
    partial void OnidDenunciaChanged();
    #endregion
		
		public Denuncia_Grupo()
		{
			this._Grupo = default(EntityRef<Grupo>);
			this._Utilizador = default(EntityRef<Utilizador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="DateTime NOT NULL")]
		public System.DateTime data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGrupoDenunciado", DbType="Int NOT NULL")]
		public int idGrupoDenunciado
		{
			get
			{
				return this._idGrupoDenunciado;
			}
			set
			{
				if ((this._idGrupoDenunciado != value))
				{
					if (this._Grupo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidGrupoDenunciadoChanging(value);
					this.SendPropertyChanging();
					this._idGrupoDenunciado = value;
					this.SendPropertyChanged("idGrupoDenunciado");
					this.OnidGrupoDenunciadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUtilizadorQueixoso", DbType="Int NOT NULL")]
		public int idUtilizadorQueixoso
		{
			get
			{
				return this._idUtilizadorQueixoso;
			}
			set
			{
				if ((this._idUtilizadorQueixoso != value))
				{
					if (this._Utilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUtilizadorQueixosoChanging(value);
					this.SendPropertyChanging();
					this._idUtilizadorQueixoso = value;
					this.SendPropertyChanged("idUtilizadorQueixoso");
					this.OnidUtilizadorQueixosoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_motivo", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string motivo
		{
			get
			{
				return this._motivo;
			}
			set
			{
				if ((this._motivo != value))
				{
					this.OnmotivoChanging(value);
					this.SendPropertyChanging();
					this._motivo = value;
					this.SendPropertyChanged("motivo");
					this.OnmotivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDenuncia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idDenuncia
		{
			get
			{
				return this._idDenuncia;
			}
			set
			{
				if ((this._idDenuncia != value))
				{
					this.OnidDenunciaChanging(value);
					this.SendPropertyChanging();
					this._idDenuncia = value;
					this.SendPropertyChanged("idDenuncia");
					this.OnidDenunciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grupo_Denuncia_Grupo", Storage="_Grupo", ThisKey="idGrupoDenunciado", OtherKey="idGrupo", IsForeignKey=true)]
		public Grupo Grupo
		{
			get
			{
				return this._Grupo.Entity;
			}
			set
			{
				Grupo previousValue = this._Grupo.Entity;
				if (((previousValue != value) 
							|| (this._Grupo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grupo.Entity = null;
						previousValue.Denuncia_Grupos.Remove(this);
					}
					this._Grupo.Entity = value;
					if ((value != null))
					{
						value.Denuncia_Grupos.Add(this);
						this._idGrupoDenunciado = value.idGrupo;
					}
					else
					{
						this._idGrupoDenunciado = default(int);
					}
					this.SendPropertyChanged("Grupo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Denuncia_Grupo", Storage="_Utilizador", ThisKey="idUtilizadorQueixoso", OtherKey="idUtilizador", IsForeignKey=true)]
		public Utilizador Utilizador
		{
			get
			{
				return this._Utilizador.Entity;
			}
			set
			{
				Utilizador previousValue = this._Utilizador.Entity;
				if (((previousValue != value) 
							|| (this._Utilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizador.Entity = null;
						previousValue.Denuncia_Grupos.Remove(this);
					}
					this._Utilizador.Entity = value;
					if ((value != null))
					{
						value.Denuncia_Grupos.Add(this);
						this._idUtilizadorQueixoso = value.idUtilizador;
					}
					else
					{
						this._idUtilizadorQueixoso = default(int);
					}
					this.SendPropertyChanged("Utilizador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Denuncia_Post")]
	public partial class Denuncia_Post : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _data;
		
		private int _idPostDenunciado;
		
		private int _idUtilizadorQueixoso;
		
		private string _motivo;
		
		private string _estado;
		
		private int _idDenuncia;
		
		private EntityRef<Post> _Post;
		
		private EntityRef<Utilizador> _Utilizador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndataChanging(System.DateTime value);
    partial void OndataChanged();
    partial void OnidPostDenunciadoChanging(int value);
    partial void OnidPostDenunciadoChanged();
    partial void OnidUtilizadorQueixosoChanging(int value);
    partial void OnidUtilizadorQueixosoChanged();
    partial void OnmotivoChanging(string value);
    partial void OnmotivoChanged();
    partial void OnestadoChanging(string value);
    partial void OnestadoChanged();
    partial void OnidDenunciaChanging(int value);
    partial void OnidDenunciaChanged();
    #endregion
		
		public Denuncia_Post()
		{
			this._Post = default(EntityRef<Post>);
			this._Utilizador = default(EntityRef<Utilizador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="DateTime NOT NULL")]
		public System.DateTime data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPostDenunciado", DbType="Int NOT NULL")]
		public int idPostDenunciado
		{
			get
			{
				return this._idPostDenunciado;
			}
			set
			{
				if ((this._idPostDenunciado != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPostDenunciadoChanging(value);
					this.SendPropertyChanging();
					this._idPostDenunciado = value;
					this.SendPropertyChanged("idPostDenunciado");
					this.OnidPostDenunciadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUtilizadorQueixoso", DbType="Int NOT NULL")]
		public int idUtilizadorQueixoso
		{
			get
			{
				return this._idUtilizadorQueixoso;
			}
			set
			{
				if ((this._idUtilizadorQueixoso != value))
				{
					if (this._Utilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUtilizadorQueixosoChanging(value);
					this.SendPropertyChanging();
					this._idUtilizadorQueixoso = value;
					this.SendPropertyChanged("idUtilizadorQueixoso");
					this.OnidUtilizadorQueixosoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_motivo", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string motivo
		{
			get
			{
				return this._motivo;
			}
			set
			{
				if ((this._motivo != value))
				{
					this.OnmotivoChanging(value);
					this.SendPropertyChanging();
					this._motivo = value;
					this.SendPropertyChanged("motivo");
					this.OnmotivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDenuncia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idDenuncia
		{
			get
			{
				return this._idDenuncia;
			}
			set
			{
				if ((this._idDenuncia != value))
				{
					this.OnidDenunciaChanging(value);
					this.SendPropertyChanging();
					this._idDenuncia = value;
					this.SendPropertyChanged("idDenuncia");
					this.OnidDenunciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_Denuncia_Post", Storage="_Post", ThisKey="idPostDenunciado", OtherKey="idPost", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.Denuncia_Posts.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.Denuncia_Posts.Add(this);
						this._idPostDenunciado = value.idPost;
					}
					else
					{
						this._idPostDenunciado = default(int);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Denuncia_Post", Storage="_Utilizador", ThisKey="idUtilizadorQueixoso", OtherKey="idUtilizador", IsForeignKey=true)]
		public Utilizador Utilizador
		{
			get
			{
				return this._Utilizador.Entity;
			}
			set
			{
				Utilizador previousValue = this._Utilizador.Entity;
				if (((previousValue != value) 
							|| (this._Utilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizador.Entity = null;
						previousValue.Denuncia_Posts.Remove(this);
					}
					this._Utilizador.Entity = value;
					if ((value != null))
					{
						value.Denuncia_Posts.Add(this);
						this._idUtilizadorQueixoso = value.idUtilizador;
					}
					else
					{
						this._idUtilizadorQueixoso = default(int);
					}
					this.SendPropertyChanged("Utilizador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Denuncia_Utilizador")]
	public partial class Denuncia_Utilizador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _data;
		
		private int _idUtilizadorDenunciado;
		
		private int _idUtilizadorQueixoso;
		
		private string _motivo;
		
		private string _estado;
		
		private int _idDenuncia;
		
		private EntityRef<Utilizador> _Utilizador;
		
		private EntityRef<Utilizador> _Utilizador1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndataChanging(System.DateTime value);
    partial void OndataChanged();
    partial void OnidUtilizadorDenunciadoChanging(int value);
    partial void OnidUtilizadorDenunciadoChanged();
    partial void OnidUtilizadorQueixosoChanging(int value);
    partial void OnidUtilizadorQueixosoChanged();
    partial void OnmotivoChanging(string value);
    partial void OnmotivoChanged();
    partial void OnestadoChanging(string value);
    partial void OnestadoChanged();
    partial void OnidDenunciaChanging(int value);
    partial void OnidDenunciaChanged();
    #endregion
		
		public Denuncia_Utilizador()
		{
			this._Utilizador = default(EntityRef<Utilizador>);
			this._Utilizador1 = default(EntityRef<Utilizador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="DateTime NOT NULL")]
		public System.DateTime data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUtilizadorDenunciado", DbType="Int NOT NULL")]
		public int idUtilizadorDenunciado
		{
			get
			{
				return this._idUtilizadorDenunciado;
			}
			set
			{
				if ((this._idUtilizadorDenunciado != value))
				{
					if (this._Utilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUtilizadorDenunciadoChanging(value);
					this.SendPropertyChanging();
					this._idUtilizadorDenunciado = value;
					this.SendPropertyChanged("idUtilizadorDenunciado");
					this.OnidUtilizadorDenunciadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUtilizadorQueixoso", DbType="Int NOT NULL")]
		public int idUtilizadorQueixoso
		{
			get
			{
				return this._idUtilizadorQueixoso;
			}
			set
			{
				if ((this._idUtilizadorQueixoso != value))
				{
					if (this._Utilizador1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUtilizadorQueixosoChanging(value);
					this.SendPropertyChanging();
					this._idUtilizadorQueixoso = value;
					this.SendPropertyChanged("idUtilizadorQueixoso");
					this.OnidUtilizadorQueixosoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_motivo", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string motivo
		{
			get
			{
				return this._motivo;
			}
			set
			{
				if ((this._motivo != value))
				{
					this.OnmotivoChanging(value);
					this.SendPropertyChanging();
					this._motivo = value;
					this.SendPropertyChanged("motivo");
					this.OnmotivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDenuncia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idDenuncia
		{
			get
			{
				return this._idDenuncia;
			}
			set
			{
				if ((this._idDenuncia != value))
				{
					this.OnidDenunciaChanging(value);
					this.SendPropertyChanging();
					this._idDenuncia = value;
					this.SendPropertyChanged("idDenuncia");
					this.OnidDenunciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Denuncia_Utilizador", Storage="_Utilizador", ThisKey="idUtilizadorDenunciado", OtherKey="idUtilizador", IsForeignKey=true)]
		public Utilizador Utilizador
		{
			get
			{
				return this._Utilizador.Entity;
			}
			set
			{
				Utilizador previousValue = this._Utilizador.Entity;
				if (((previousValue != value) 
							|| (this._Utilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizador.Entity = null;
						previousValue.Denuncia_Utilizadors.Remove(this);
					}
					this._Utilizador.Entity = value;
					if ((value != null))
					{
						value.Denuncia_Utilizadors.Add(this);
						this._idUtilizadorDenunciado = value.idUtilizador;
					}
					else
					{
						this._idUtilizadorDenunciado = default(int);
					}
					this.SendPropertyChanged("Utilizador");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Denuncia_Utilizador1", Storage="_Utilizador1", ThisKey="idUtilizadorQueixoso", OtherKey="idUtilizador", IsForeignKey=true)]
		public Utilizador Utilizador1
		{
			get
			{
				return this._Utilizador1.Entity;
			}
			set
			{
				Utilizador previousValue = this._Utilizador1.Entity;
				if (((previousValue != value) 
							|| (this._Utilizador1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizador1.Entity = null;
						previousValue.Denuncia_Utilizadors1.Remove(this);
					}
					this._Utilizador1.Entity = value;
					if ((value != null))
					{
						value.Denuncia_Utilizadors1.Add(this);
						this._idUtilizadorQueixoso = value.idUtilizador;
					}
					else
					{
						this._idUtilizadorQueixoso = default(int);
					}
					this.SendPropertyChanged("Utilizador1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Descarregar")]
	public partial class Descarregar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUtilizador;
		
		private int _idPost;
		
		private System.DateTime _data;
		
		private EntityRef<Utilizador> _Utilizador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUtilizadorChanging(int value);
    partial void OnidUtilizadorChanged();
    partial void OnidPostChanging(int value);
    partial void OnidPostChanged();
    partial void OndataChanging(System.DateTime value);
    partial void OndataChanged();
    #endregion
		
		public Descarregar()
		{
			this._Utilizador = default(EntityRef<Utilizador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUtilizador", DbType="Int NOT NULL")]
		public int idUtilizador
		{
			get
			{
				return this._idUtilizador;
			}
			set
			{
				if ((this._idUtilizador != value))
				{
					if (this._Utilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUtilizadorChanging(value);
					this.SendPropertyChanging();
					this._idUtilizador = value;
					this.SendPropertyChanged("idUtilizador");
					this.OnidUtilizadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPost", DbType="Int NOT NULL")]
		public int idPost
		{
			get
			{
				return this._idPost;
			}
			set
			{
				if ((this._idPost != value))
				{
					this.OnidPostChanging(value);
					this.SendPropertyChanging();
					this._idPost = value;
					this.SendPropertyChanged("idPost");
					this.OnidPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Descarregar", Storage="_Utilizador", ThisKey="idUtilizador", OtherKey="idUtilizador", IsForeignKey=true)]
		public Utilizador Utilizador
		{
			get
			{
				return this._Utilizador.Entity;
			}
			set
			{
				Utilizador previousValue = this._Utilizador.Entity;
				if (((previousValue != value) 
							|| (this._Utilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizador.Entity = null;
						previousValue.Descarregars.Remove(this);
					}
					this._Utilizador.Entity = value;
					if ((value != null))
					{
						value.Descarregars.Add(this);
						this._idUtilizador = value.idUtilizador;
					}
					else
					{
						this._idUtilizador = default(int);
					}
					this.SendPropertyChanged("Utilizador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Grupo")]
	public partial class Grupo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idGrupo;
		
		private string _nome;
		
		private System.DateTime _dataCriacao;
		
		private System.Nullable<bool> _visibilidade;
		
		private EntitySet<Convidar> _Convidars;
		
		private EntitySet<Denuncia_Grupo> _Denuncia_Grupos;
		
		private EntitySet<Perfil_Grupo> _Perfil_Grupos;
		
		private EntitySet<Post> _Posts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidGrupoChanging(int value);
    partial void OnidGrupoChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OndataCriacaoChanging(System.DateTime value);
    partial void OndataCriacaoChanged();
    partial void OnvisibilidadeChanging(System.Nullable<bool> value);
    partial void OnvisibilidadeChanged();
    #endregion
		
		public Grupo()
		{
			this._Convidars = new EntitySet<Convidar>(new Action<Convidar>(this.attach_Convidars), new Action<Convidar>(this.detach_Convidars));
			this._Denuncia_Grupos = new EntitySet<Denuncia_Grupo>(new Action<Denuncia_Grupo>(this.attach_Denuncia_Grupos), new Action<Denuncia_Grupo>(this.detach_Denuncia_Grupos));
			this._Perfil_Grupos = new EntitySet<Perfil_Grupo>(new Action<Perfil_Grupo>(this.attach_Perfil_Grupos), new Action<Perfil_Grupo>(this.detach_Perfil_Grupos));
			this._Posts = new EntitySet<Post>(new Action<Post>(this.attach_Posts), new Action<Post>(this.detach_Posts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGrupo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idGrupo
		{
			get
			{
				return this._idGrupo;
			}
			set
			{
				if ((this._idGrupo != value))
				{
					this.OnidGrupoChanging(value);
					this.SendPropertyChanging();
					this._idGrupo = value;
					this.SendPropertyChanged("idGrupo");
					this.OnidGrupoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataCriacao", DbType="DateTime NOT NULL")]
		public System.DateTime dataCriacao
		{
			get
			{
				return this._dataCriacao;
			}
			set
			{
				if ((this._dataCriacao != value))
				{
					this.OndataCriacaoChanging(value);
					this.SendPropertyChanging();
					this._dataCriacao = value;
					this.SendPropertyChanged("dataCriacao");
					this.OndataCriacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_visibilidade", DbType="Bit")]
		public System.Nullable<bool> visibilidade
		{
			get
			{
				return this._visibilidade;
			}
			set
			{
				if ((this._visibilidade != value))
				{
					this.OnvisibilidadeChanging(value);
					this.SendPropertyChanging();
					this._visibilidade = value;
					this.SendPropertyChanged("visibilidade");
					this.OnvisibilidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grupo_Convidar", Storage="_Convidars", ThisKey="idGrupo", OtherKey="idGrupo")]
		public EntitySet<Convidar> Convidars
		{
			get
			{
				return this._Convidars;
			}
			set
			{
				this._Convidars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grupo_Denuncia_Grupo", Storage="_Denuncia_Grupos", ThisKey="idGrupo", OtherKey="idGrupoDenunciado")]
		public EntitySet<Denuncia_Grupo> Denuncia_Grupos
		{
			get
			{
				return this._Denuncia_Grupos;
			}
			set
			{
				this._Denuncia_Grupos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grupo_Perfil_Grupo", Storage="_Perfil_Grupos", ThisKey="idGrupo", OtherKey="idGrupo")]
		public EntitySet<Perfil_Grupo> Perfil_Grupos
		{
			get
			{
				return this._Perfil_Grupos;
			}
			set
			{
				this._Perfil_Grupos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grupo_Post", Storage="_Posts", ThisKey="idGrupo", OtherKey="idGrupo")]
		public EntitySet<Post> Posts
		{
			get
			{
				return this._Posts;
			}
			set
			{
				this._Posts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Convidars(Convidar entity)
		{
			this.SendPropertyChanging();
			entity.Grupo = this;
		}
		
		private void detach_Convidars(Convidar entity)
		{
			this.SendPropertyChanging();
			entity.Grupo = null;
		}
		
		private void attach_Denuncia_Grupos(Denuncia_Grupo entity)
		{
			this.SendPropertyChanging();
			entity.Grupo = this;
		}
		
		private void detach_Denuncia_Grupos(Denuncia_Grupo entity)
		{
			this.SendPropertyChanging();
			entity.Grupo = null;
		}
		
		private void attach_Perfil_Grupos(Perfil_Grupo entity)
		{
			this.SendPropertyChanging();
			entity.Grupo = this;
		}
		
		private void detach_Perfil_Grupos(Perfil_Grupo entity)
		{
			this.SendPropertyChanging();
			entity.Grupo = null;
		}
		
		private void attach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.Grupo = this;
		}
		
		private void detach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.Grupo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Perfil_Grupo")]
	public partial class Perfil_Grupo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idGrupo;
		
		private int _idUtilizador;
		
		private string _papel;
		
		private int _idPerfilGrupo;
		
		private EntityRef<Grupo> _Grupo;
		
		private EntityRef<Utilizador> _Utilizador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidGrupoChanging(int value);
    partial void OnidGrupoChanged();
    partial void OnidUtilizadorChanging(int value);
    partial void OnidUtilizadorChanged();
    partial void OnpapelChanging(string value);
    partial void OnpapelChanged();
    partial void OnidPerfilGrupoChanging(int value);
    partial void OnidPerfilGrupoChanged();
    #endregion
		
		public Perfil_Grupo()
		{
			this._Grupo = default(EntityRef<Grupo>);
			this._Utilizador = default(EntityRef<Utilizador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGrupo", DbType="Int NOT NULL")]
		public int idGrupo
		{
			get
			{
				return this._idGrupo;
			}
			set
			{
				if ((this._idGrupo != value))
				{
					if (this._Grupo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidGrupoChanging(value);
					this.SendPropertyChanging();
					this._idGrupo = value;
					this.SendPropertyChanged("idGrupo");
					this.OnidGrupoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUtilizador", DbType="Int NOT NULL")]
		public int idUtilizador
		{
			get
			{
				return this._idUtilizador;
			}
			set
			{
				if ((this._idUtilizador != value))
				{
					if (this._Utilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUtilizadorChanging(value);
					this.SendPropertyChanging();
					this._idUtilizador = value;
					this.SendPropertyChanged("idUtilizador");
					this.OnidUtilizadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_papel", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string papel
		{
			get
			{
				return this._papel;
			}
			set
			{
				if ((this._papel != value))
				{
					this.OnpapelChanging(value);
					this.SendPropertyChanging();
					this._papel = value;
					this.SendPropertyChanged("papel");
					this.OnpapelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPerfilGrupo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPerfilGrupo
		{
			get
			{
				return this._idPerfilGrupo;
			}
			set
			{
				if ((this._idPerfilGrupo != value))
				{
					this.OnidPerfilGrupoChanging(value);
					this.SendPropertyChanging();
					this._idPerfilGrupo = value;
					this.SendPropertyChanged("idPerfilGrupo");
					this.OnidPerfilGrupoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grupo_Perfil_Grupo", Storage="_Grupo", ThisKey="idGrupo", OtherKey="idGrupo", IsForeignKey=true)]
		public Grupo Grupo
		{
			get
			{
				return this._Grupo.Entity;
			}
			set
			{
				Grupo previousValue = this._Grupo.Entity;
				if (((previousValue != value) 
							|| (this._Grupo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grupo.Entity = null;
						previousValue.Perfil_Grupos.Remove(this);
					}
					this._Grupo.Entity = value;
					if ((value != null))
					{
						value.Perfil_Grupos.Add(this);
						this._idGrupo = value.idGrupo;
					}
					else
					{
						this._idGrupo = default(int);
					}
					this.SendPropertyChanged("Grupo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Perfil_Grupo", Storage="_Utilizador", ThisKey="idUtilizador", OtherKey="idUtilizador", IsForeignKey=true)]
		public Utilizador Utilizador
		{
			get
			{
				return this._Utilizador.Entity;
			}
			set
			{
				Utilizador previousValue = this._Utilizador.Entity;
				if (((previousValue != value) 
							|| (this._Utilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizador.Entity = null;
						previousValue.Perfil_Grupos.Remove(this);
					}
					this._Utilizador.Entity = value;
					if ((value != null))
					{
						value.Perfil_Grupos.Add(this);
						this._idUtilizador = value.idUtilizador;
					}
					else
					{
						this._idUtilizador = default(int);
					}
					this.SendPropertyChanged("Utilizador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Post")]
	public partial class Post : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPost;
		
		private int _idCriador;
		
		private string _descricao;
		
		private string _tipo;
		
		private System.DateTime _dataCriacao;
		
		private int _privacidade;
		
		private int _naoGostos;
		
		private int _gostos;
		
		private int _nrComentarios;
		
		private string _caminho;
		
		private System.Nullable<int> _idGrupo;
		
		private bool _visibilidade;
		
		private EntitySet<Classificar> _Classificars;
		
		private EntitySet<Denuncia_Post> _Denuncia_Posts;
		
		private EntityRef<Grupo> _Grupo;
		
		private EntityRef<Utilizador> _Utilizador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPostChanging(int value);
    partial void OnidPostChanged();
    partial void OnidCriadorChanging(int value);
    partial void OnidCriadorChanged();
    partial void OndescricaoChanging(string value);
    partial void OndescricaoChanged();
    partial void OntipoChanging(string value);
    partial void OntipoChanged();
    partial void OndataCriacaoChanging(System.DateTime value);
    partial void OndataCriacaoChanged();
    partial void OnprivacidadeChanging(int value);
    partial void OnprivacidadeChanged();
    partial void OnnaoGostosChanging(int value);
    partial void OnnaoGostosChanged();
    partial void OngostosChanging(int value);
    partial void OngostosChanged();
    partial void OnnrComentariosChanging(int value);
    partial void OnnrComentariosChanged();
    partial void OncaminhoChanging(string value);
    partial void OncaminhoChanged();
    partial void OnidGrupoChanging(System.Nullable<int> value);
    partial void OnidGrupoChanged();
    partial void OnvisibilidadeChanging(bool value);
    partial void OnvisibilidadeChanged();
    #endregion
		
		public Post()
		{
			this._Classificars = new EntitySet<Classificar>(new Action<Classificar>(this.attach_Classificars), new Action<Classificar>(this.detach_Classificars));
			this._Denuncia_Posts = new EntitySet<Denuncia_Post>(new Action<Denuncia_Post>(this.attach_Denuncia_Posts), new Action<Denuncia_Post>(this.detach_Denuncia_Posts));
			this._Grupo = default(EntityRef<Grupo>);
			this._Utilizador = default(EntityRef<Utilizador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPost", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPost
		{
			get
			{
				return this._idPost;
			}
			set
			{
				if ((this._idPost != value))
				{
					this.OnidPostChanging(value);
					this.SendPropertyChanging();
					this._idPost = value;
					this.SendPropertyChanged("idPost");
					this.OnidPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCriador", DbType="Int NOT NULL")]
		public int idCriador
		{
			get
			{
				return this._idCriador;
			}
			set
			{
				if ((this._idCriador != value))
				{
					if (this._Utilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCriadorChanging(value);
					this.SendPropertyChanging();
					this._idCriador = value;
					this.SendPropertyChanged("idCriador");
					this.OnidCriadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descricao", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string descricao
		{
			get
			{
				return this._descricao;
			}
			set
			{
				if ((this._descricao != value))
				{
					this.OndescricaoChanging(value);
					this.SendPropertyChanging();
					this._descricao = value;
					this.SendPropertyChanged("descricao");
					this.OndescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string tipo
		{
			get
			{
				return this._tipo;
			}
			set
			{
				if ((this._tipo != value))
				{
					this.OntipoChanging(value);
					this.SendPropertyChanging();
					this._tipo = value;
					this.SendPropertyChanged("tipo");
					this.OntipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataCriacao", DbType="DateTime NOT NULL")]
		public System.DateTime dataCriacao
		{
			get
			{
				return this._dataCriacao;
			}
			set
			{
				if ((this._dataCriacao != value))
				{
					this.OndataCriacaoChanging(value);
					this.SendPropertyChanging();
					this._dataCriacao = value;
					this.SendPropertyChanged("dataCriacao");
					this.OndataCriacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_privacidade", DbType="Int NOT NULL")]
		public int privacidade
		{
			get
			{
				return this._privacidade;
			}
			set
			{
				if ((this._privacidade != value))
				{
					this.OnprivacidadeChanging(value);
					this.SendPropertyChanging();
					this._privacidade = value;
					this.SendPropertyChanged("privacidade");
					this.OnprivacidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naoGostos", DbType="Int NOT NULL")]
		public int naoGostos
		{
			get
			{
				return this._naoGostos;
			}
			set
			{
				if ((this._naoGostos != value))
				{
					this.OnnaoGostosChanging(value);
					this.SendPropertyChanging();
					this._naoGostos = value;
					this.SendPropertyChanged("naoGostos");
					this.OnnaoGostosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gostos", DbType="Int NOT NULL")]
		public int gostos
		{
			get
			{
				return this._gostos;
			}
			set
			{
				if ((this._gostos != value))
				{
					this.OngostosChanging(value);
					this.SendPropertyChanging();
					this._gostos = value;
					this.SendPropertyChanged("gostos");
					this.OngostosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nrComentarios", DbType="Int NOT NULL")]
		public int nrComentarios
		{
			get
			{
				return this._nrComentarios;
			}
			set
			{
				if ((this._nrComentarios != value))
				{
					this.OnnrComentariosChanging(value);
					this.SendPropertyChanging();
					this._nrComentarios = value;
					this.SendPropertyChanged("nrComentarios");
					this.OnnrComentariosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caminho", DbType="NVarChar(MAX)")]
		public string caminho
		{
			get
			{
				return this._caminho;
			}
			set
			{
				if ((this._caminho != value))
				{
					this.OncaminhoChanging(value);
					this.SendPropertyChanging();
					this._caminho = value;
					this.SendPropertyChanged("caminho");
					this.OncaminhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGrupo", DbType="Int")]
		public System.Nullable<int> idGrupo
		{
			get
			{
				return this._idGrupo;
			}
			set
			{
				if ((this._idGrupo != value))
				{
					if (this._Grupo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidGrupoChanging(value);
					this.SendPropertyChanging();
					this._idGrupo = value;
					this.SendPropertyChanged("idGrupo");
					this.OnidGrupoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_visibilidade", DbType="Bit NOT NULL")]
		public bool visibilidade
		{
			get
			{
				return this._visibilidade;
			}
			set
			{
				if ((this._visibilidade != value))
				{
					this.OnvisibilidadeChanging(value);
					this.SendPropertyChanging();
					this._visibilidade = value;
					this.SendPropertyChanged("visibilidade");
					this.OnvisibilidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_Classificar", Storage="_Classificars", ThisKey="idPost", OtherKey="idPost")]
		public EntitySet<Classificar> Classificars
		{
			get
			{
				return this._Classificars;
			}
			set
			{
				this._Classificars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_Denuncia_Post", Storage="_Denuncia_Posts", ThisKey="idPost", OtherKey="idPostDenunciado")]
		public EntitySet<Denuncia_Post> Denuncia_Posts
		{
			get
			{
				return this._Denuncia_Posts;
			}
			set
			{
				this._Denuncia_Posts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grupo_Post", Storage="_Grupo", ThisKey="idGrupo", OtherKey="idGrupo", IsForeignKey=true)]
		public Grupo Grupo
		{
			get
			{
				return this._Grupo.Entity;
			}
			set
			{
				Grupo previousValue = this._Grupo.Entity;
				if (((previousValue != value) 
							|| (this._Grupo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grupo.Entity = null;
						previousValue.Posts.Remove(this);
					}
					this._Grupo.Entity = value;
					if ((value != null))
					{
						value.Posts.Add(this);
						this._idGrupo = value.idGrupo;
					}
					else
					{
						this._idGrupo = default(Nullable<int>);
					}
					this.SendPropertyChanged("Grupo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Post", Storage="_Utilizador", ThisKey="idCriador", OtherKey="idUtilizador", IsForeignKey=true)]
		public Utilizador Utilizador
		{
			get
			{
				return this._Utilizador.Entity;
			}
			set
			{
				Utilizador previousValue = this._Utilizador.Entity;
				if (((previousValue != value) 
							|| (this._Utilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizador.Entity = null;
						previousValue.Posts.Remove(this);
					}
					this._Utilizador.Entity = value;
					if ((value != null))
					{
						value.Posts.Add(this);
						this._idCriador = value.idUtilizador;
					}
					else
					{
						this._idCriador = default(int);
					}
					this.SendPropertyChanged("Utilizador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Classificars(Classificar entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_Classificars(Classificar entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
		
		private void attach_Denuncia_Posts(Denuncia_Post entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_Denuncia_Posts(Denuncia_Post entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Utilizador")]
	public partial class Utilizador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUtilizador;
		
		private string _username;
		
		private string _email;
		
		private string _pwd;
		
		private int _estado;
		
		private string _foto;
		
		private string _tipo;
		
		private System.Nullable<System.Guid> _userGuid;
		
		private EntitySet<Classificar> _Classificars;
		
		private EntitySet<Comentar> _Comentars;
		
		private EntitySet<Convidar> _Convidars;
		
		private EntitySet<Convidar> _Convidars1;
		
		private EntitySet<Denuncia_Grupo> _Denuncia_Grupos;
		
		private EntitySet<Denuncia_Post> _Denuncia_Posts;
		
		private EntitySet<Denuncia_Utilizador> _Denuncia_Utilizadors;
		
		private EntitySet<Denuncia_Utilizador> _Denuncia_Utilizadors1;
		
		private EntitySet<Descarregar> _Descarregars;
		
		private EntitySet<Perfil_Grupo> _Perfil_Grupos;
		
		private EntitySet<Post> _Posts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUtilizadorChanging(int value);
    partial void OnidUtilizadorChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpwdChanging(string value);
    partial void OnpwdChanged();
    partial void OnestadoChanging(int value);
    partial void OnestadoChanged();
    partial void OnfotoChanging(string value);
    partial void OnfotoChanged();
    partial void OntipoChanging(string value);
    partial void OntipoChanged();
    partial void OnuserGuidChanging(System.Nullable<System.Guid> value);
    partial void OnuserGuidChanged();
    #endregion
		
		public Utilizador()
		{
			this._Classificars = new EntitySet<Classificar>(new Action<Classificar>(this.attach_Classificars), new Action<Classificar>(this.detach_Classificars));
			this._Comentars = new EntitySet<Comentar>(new Action<Comentar>(this.attach_Comentars), new Action<Comentar>(this.detach_Comentars));
			this._Convidars = new EntitySet<Convidar>(new Action<Convidar>(this.attach_Convidars), new Action<Convidar>(this.detach_Convidars));
			this._Convidars1 = new EntitySet<Convidar>(new Action<Convidar>(this.attach_Convidars1), new Action<Convidar>(this.detach_Convidars1));
			this._Denuncia_Grupos = new EntitySet<Denuncia_Grupo>(new Action<Denuncia_Grupo>(this.attach_Denuncia_Grupos), new Action<Denuncia_Grupo>(this.detach_Denuncia_Grupos));
			this._Denuncia_Posts = new EntitySet<Denuncia_Post>(new Action<Denuncia_Post>(this.attach_Denuncia_Posts), new Action<Denuncia_Post>(this.detach_Denuncia_Posts));
			this._Denuncia_Utilizadors = new EntitySet<Denuncia_Utilizador>(new Action<Denuncia_Utilizador>(this.attach_Denuncia_Utilizadors), new Action<Denuncia_Utilizador>(this.detach_Denuncia_Utilizadors));
			this._Denuncia_Utilizadors1 = new EntitySet<Denuncia_Utilizador>(new Action<Denuncia_Utilizador>(this.attach_Denuncia_Utilizadors1), new Action<Denuncia_Utilizador>(this.detach_Denuncia_Utilizadors1));
			this._Descarregars = new EntitySet<Descarregar>(new Action<Descarregar>(this.attach_Descarregars), new Action<Descarregar>(this.detach_Descarregars));
			this._Perfil_Grupos = new EntitySet<Perfil_Grupo>(new Action<Perfil_Grupo>(this.attach_Perfil_Grupos), new Action<Perfil_Grupo>(this.detach_Perfil_Grupos));
			this._Posts = new EntitySet<Post>(new Action<Post>(this.attach_Posts), new Action<Post>(this.detach_Posts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUtilizador", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idUtilizador
		{
			get
			{
				return this._idUtilizador;
			}
			set
			{
				if ((this._idUtilizador != value))
				{
					this.OnidUtilizadorChanging(value);
					this.SendPropertyChanging();
					this._idUtilizador = value;
					this.SendPropertyChanged("idUtilizador");
					this.OnidUtilizadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pwd", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string pwd
		{
			get
			{
				return this._pwd;
			}
			set
			{
				if ((this._pwd != value))
				{
					this.OnpwdChanging(value);
					this.SendPropertyChanging();
					this._pwd = value;
					this.SendPropertyChanged("pwd");
					this.OnpwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="Int NOT NULL")]
		public int estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foto", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string foto
		{
			get
			{
				return this._foto;
			}
			set
			{
				if ((this._foto != value))
				{
					this.OnfotoChanging(value);
					this.SendPropertyChanging();
					this._foto = value;
					this.SendPropertyChanged("foto");
					this.OnfotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string tipo
		{
			get
			{
				return this._tipo;
			}
			set
			{
				if ((this._tipo != value))
				{
					this.OntipoChanging(value);
					this.SendPropertyChanging();
					this._tipo = value;
					this.SendPropertyChanged("tipo");
					this.OntipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userGuid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> userGuid
		{
			get
			{
				return this._userGuid;
			}
			set
			{
				if ((this._userGuid != value))
				{
					this.OnuserGuidChanging(value);
					this.SendPropertyChanging();
					this._userGuid = value;
					this.SendPropertyChanged("userGuid");
					this.OnuserGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Classificar", Storage="_Classificars", ThisKey="idUtilizador", OtherKey="idUtilizador")]
		public EntitySet<Classificar> Classificars
		{
			get
			{
				return this._Classificars;
			}
			set
			{
				this._Classificars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Comentar", Storage="_Comentars", ThisKey="idUtilizador", OtherKey="idComentador")]
		public EntitySet<Comentar> Comentars
		{
			get
			{
				return this._Comentars;
			}
			set
			{
				this._Comentars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Convidar", Storage="_Convidars", ThisKey="idUtilizador", OtherKey="idUtilizadorConvidado")]
		public EntitySet<Convidar> Convidars
		{
			get
			{
				return this._Convidars;
			}
			set
			{
				this._Convidars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Convidar1", Storage="_Convidars1", ThisKey="idUtilizador", OtherKey="idUtilizadorConvida")]
		public EntitySet<Convidar> Convidars1
		{
			get
			{
				return this._Convidars1;
			}
			set
			{
				this._Convidars1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Denuncia_Grupo", Storage="_Denuncia_Grupos", ThisKey="idUtilizador", OtherKey="idUtilizadorQueixoso")]
		public EntitySet<Denuncia_Grupo> Denuncia_Grupos
		{
			get
			{
				return this._Denuncia_Grupos;
			}
			set
			{
				this._Denuncia_Grupos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Denuncia_Post", Storage="_Denuncia_Posts", ThisKey="idUtilizador", OtherKey="idUtilizadorQueixoso")]
		public EntitySet<Denuncia_Post> Denuncia_Posts
		{
			get
			{
				return this._Denuncia_Posts;
			}
			set
			{
				this._Denuncia_Posts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Denuncia_Utilizador", Storage="_Denuncia_Utilizadors", ThisKey="idUtilizador", OtherKey="idUtilizadorDenunciado")]
		public EntitySet<Denuncia_Utilizador> Denuncia_Utilizadors
		{
			get
			{
				return this._Denuncia_Utilizadors;
			}
			set
			{
				this._Denuncia_Utilizadors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Denuncia_Utilizador1", Storage="_Denuncia_Utilizadors1", ThisKey="idUtilizador", OtherKey="idUtilizadorQueixoso")]
		public EntitySet<Denuncia_Utilizador> Denuncia_Utilizadors1
		{
			get
			{
				return this._Denuncia_Utilizadors1;
			}
			set
			{
				this._Denuncia_Utilizadors1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Descarregar", Storage="_Descarregars", ThisKey="idUtilizador", OtherKey="idUtilizador")]
		public EntitySet<Descarregar> Descarregars
		{
			get
			{
				return this._Descarregars;
			}
			set
			{
				this._Descarregars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Perfil_Grupo", Storage="_Perfil_Grupos", ThisKey="idUtilizador", OtherKey="idUtilizador")]
		public EntitySet<Perfil_Grupo> Perfil_Grupos
		{
			get
			{
				return this._Perfil_Grupos;
			}
			set
			{
				this._Perfil_Grupos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Post", Storage="_Posts", ThisKey="idUtilizador", OtherKey="idCriador")]
		public EntitySet<Post> Posts
		{
			get
			{
				return this._Posts;
			}
			set
			{
				this._Posts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Classificars(Classificar entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = this;
		}
		
		private void detach_Classificars(Classificar entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = null;
		}
		
		private void attach_Comentars(Comentar entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = this;
		}
		
		private void detach_Comentars(Comentar entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = null;
		}
		
		private void attach_Convidars(Convidar entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = this;
		}
		
		private void detach_Convidars(Convidar entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = null;
		}
		
		private void attach_Convidars1(Convidar entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador1 = this;
		}
		
		private void detach_Convidars1(Convidar entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador1 = null;
		}
		
		private void attach_Denuncia_Grupos(Denuncia_Grupo entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = this;
		}
		
		private void detach_Denuncia_Grupos(Denuncia_Grupo entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = null;
		}
		
		private void attach_Denuncia_Posts(Denuncia_Post entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = this;
		}
		
		private void detach_Denuncia_Posts(Denuncia_Post entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = null;
		}
		
		private void attach_Denuncia_Utilizadors(Denuncia_Utilizador entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = this;
		}
		
		private void detach_Denuncia_Utilizadors(Denuncia_Utilizador entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = null;
		}
		
		private void attach_Denuncia_Utilizadors1(Denuncia_Utilizador entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador1 = this;
		}
		
		private void detach_Denuncia_Utilizadors1(Denuncia_Utilizador entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador1 = null;
		}
		
		private void attach_Descarregars(Descarregar entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = this;
		}
		
		private void detach_Descarregars(Descarregar entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = null;
		}
		
		private void attach_Perfil_Grupos(Perfil_Grupo entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = this;
		}
		
		private void detach_Perfil_Grupos(Perfil_Grupo entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = null;
		}
		
		private void attach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = this;
		}
		
		private void detach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = null;
		}
	}
}
#pragma warning restore 1591
